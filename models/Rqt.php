<?php

namespace app\models;

use Yii;
use yii\base\Model;
use linslin\yii2\curl\Curl;

class Rqt extends Model
{
    public $ip = FALSE;
    public $output = FALSE;
    private $cache = FALSE;
    const TIME_CACHE = 1800; //30минут = 60*30 = 1800 секунд
    private $curl = FALSE;


    /**
     * Инициализация
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->cache = Yii::$app->cache;
        if (!$this->curl) $this->curl = new Curl;
    }

    /**
     * Правило валидации IP
     * @return array
     */
    public function rules()
    {
        return [
            [['ip'], 'ip','ipv6' => false,'subnet'=>false],
        ];
    }

    /**
     * Забираем данные из кэша (если нет в кэше, получаем и кэшируем)
     * @param $input
     * @return array|bool
     */
    public function getCacheData($input)
    {
        if ($this->ip) {
            $data = $this->cache->get($this->ip);
            if (!$data) {
                $data = $this->getData();
                $this->cache->set($input, $data, TIME_CACHE);
            }
            return $data;
        }
        return FALSE;
    }

    /**
     * Приводим строку поиска по API к необходимому виду (шаблон [ip])
     * @return bool|array
     */
    public function setStr(){
        $out = FALSE;
        if (Yii::$app->params['getApi'] && $this->ip) {
            foreach (Yii::$app->params['getApi'] as $key => $value) {
                $out[$key] = preg_replace("/\[ip\]/", $this->ip, Yii::$app->params['getApi'][$key]['url']);
            }
            return $out;
        }
        return $out;
    }


    /**
     * Получение данных с другого сервера
     * @return bool|mixed
     */
    public function getData()
    {
        $_str = $this->setStr();
        if (is_array($_str)) {
            foreach ($_str as $key=>$value) {
                $response = $this->curl->get($value);
                //кто первый ответил того и тапки
                if ($this->curl->errorCode === null) {
                    if (json_decode($response,true)) {
                        return [$key => json_decode($response,true)];
                    }
                }
            }
        }
        return FALSE;

    }


}
